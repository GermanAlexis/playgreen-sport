#Dependecies
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app


COPY package.json ./
COPY pnpm-lock.yaml ./


RUN npm install -g pnpm
RUN pnpm install

# Builder
FROM node:21-alpine3.19 as builder

ARG HOST_DATABASE
ARG PORT_DATABASE
ARG USER_DATABASE
ARG PASS_DATABASE
ARG NAME_DATABASE

ENV HOST_DATABASE=$HOST_DATABASE
ENV PORT_DATABASE=$PORT_DATABASE
ENV USER_DATABASE=$USER_DATABASE
ENV PASS_DATABASE=$PASS_DATABASE
ENV NAME_DATABASE=$NAME_DATABASE

WORKDIR /usr/src/app




# Instalar pnpm en la etapa de construcci√≥n
RUN npm install -g pnpm



COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY . .

RUN npx prisma migrate deploy
RUN npx prisma generate
# RUN testing
RUN pnpm run build


RUN pnpm install --prod --frozen-lockfile
RUN pnpm store prune


#final stage
FROM node:21-alpine3.19 as production
WORKDIR /usr/src/app

COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/prisma ./prisma
COPY package.json ./


ENV NODE_ENV=production

USER daemon

EXPOSE 3000
CMD [ "node",  "dist/main.js" ]